{"version":3,"sources":["components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","components/Expenses/ExpensesFilter.jsx","components/UI/Card.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expenses.jsx","App.js","index.js"],"names":["ExpenseForm","onSaveExpenseData","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","e","preventDefault","expenseData","title","amount","date","Date","className","htmlFor","type","onChange","target","value","min","step","max","NewExpense","onAddExpense","enteredExpenseData","id","Math","random","toString","ExpensesFilter","onChangeFilter","selected","event","Card","props","classes","children","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","label","maxValue","barFillHeight","round","style","height","Chart","dataPoints","dataPointsValues","dataPoint","totalMaximum","ExpensesChart","expenses","chartDataPoints","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","INITIAL_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0d8d3fe.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = ({ onSaveExpenseData }) => {\n\tconst [ enteredTitle, setEnteredTitle ] = useState('');\n\tconst [ enteredAmount, setEnteredAmount ] = useState('');\n\tconst [ enteredDate, setEnteredDate ] = useState('');\n\n\tconst titleChangeHandler = (e) => {\n\t\tsetEnteredTitle(e.target.value);\n\t};\n\n\tconst amountChangeHandler = (e) => {\n\t\tsetEnteredAmount(e.target.value);\n\t};\n\n\tconst dateChangeHandler = (e) => {\n\t\tsetEnteredDate(e.target.value);\n\t};\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\n\t\tconst expenseData = {\n\t\t\ttitle: enteredTitle,\n\t\t\tamount: enteredAmount,\n\t\t\tdate: new Date(enteredDate)\n\t\t};\n\n\t\tonSaveExpenseData(expenseData);\n\t\tsetEnteredTitle('');\n\t\tsetEnteredAmount('');\n\t\tsetEnteredDate('');\n\t};\n\n\treturn (\n\t\t<form onSubmit={submitHandler}>\n\t\t\t<div className=\"new-expense__controls\">\n\t\t\t\t<div className=\"new-expense__control\">\n\t\t\t\t\t<label htmlFor=\"title\">Title</label>\n\t\t\t\t\t<input type=\"text\" onChange={titleChangeHandler} value={enteredTitle} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"new-expense__control\">\n\t\t\t\t\t<label htmlFor=\"amount\">Amount</label>\n\t\t\t\t\t<input type=\"number\" min=\"0.00\" step=\"0.01\" onChange={amountChangeHandler} value={enteredAmount} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"new-expense__control\">\n\t\t\t\t\t<label htmlFor=\"date\">Date</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tmin=\"2019-01-01\"\n\t\t\t\t\t\tmax=\"2022-12-31\"\n\t\t\t\t\t\tonChange={dateChangeHandler}\n\t\t\t\t\t\tvalue={enteredDate}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"new-expense__actions\">\n\t\t\t\t<button type=\"submit\">Add Expense</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default ExpenseForm;\n","import './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = ({ onAddExpense }) => {\n\tconst saveExpenseDataHandler = (enteredExpenseData) => {\n\t\tconst expenseData = {\n\t\t\t...enteredExpenseData,\n\t\t\tid: Math.random().toString()\n\t\t};\n\t\tonAddExpense(expenseData);\n\t};\n\n\treturn (\n\t\t<div className=\"new-expense\">\n\t\t\t<ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n\t\t</div>\n\t);\n};\n\nexport default NewExpense;\n","import './ExpensesFilter.css';\n\nconst ExpensesFilter = ({ onChangeFilter, selected }) => {\n\tconst dropdownChangeHandler = (event) => {\n\t\tonChangeFilter(event.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"expenses-filter\">\n\t\t\t<div className=\"expenses-filter__control\">\n\t\t\t\t<label>Filter by year</label>\n\t\t\t\t<select value={selected} onChange={dropdownChangeHandler}>\n\t\t\t\t\t<option value=\"2022\">2022</option>\n\t\t\t\t\t<option value=\"2021\">2021</option>\n\t\t\t\t\t<option value=\"2020\">2020</option>\n\t\t\t\t\t<option value=\"2019\">2019</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ExpensesFilter;\n","import './Card.css';\n\nconst Card = (props) => {\n\tconst classes = 'card ' + props.className;\n\n\treturn <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import './ExpenseDate.css';\n\nconst ExpenseDate = ({ date }) => {\n\tconst month = date.toLocaleString('en-US', { month: 'long' });\n\tconst day = date.toLocaleString('en-US', { day: '2-digit' });\n\tconst year = date.getFullYear();\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"expense-date__month\">{month}</div>\n\t\t\t<div className=\"expense-date__year\">{year}</div>\n\t\t\t<div className=\"expense-date__day\">{day}</div>\n\t\t</div>\n\t);\n};\n\nexport default ExpenseDate;\n","import Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = ({ title, date, amount }) => {\n\treturn (\n\t\t<li>\n\t\t\t<Card className=\"expense-item\">\n\t\t\t\t<ExpenseDate date={date} />\n\t\t\t\t<div className=\"expense-item__description\">\n\t\t\t\t\t<h2>{title}</h2>\n\t\t\t\t\t<div className=\"expense-item__price\">${amount}</div>\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t</li>\n\t);\n};\n\nexport default ExpenseItem;\n","import './ExpensesList.css';\nimport ExpenseItem from './ExpenseItem';\n\nconst ExpensesList = ({ items }) => {\n\treturn items.length === 0 ? (\n\t\t<h2 className=\"expenses-list__fallback\">No expenses found.</h2>\n\t) : (\n\t\t<ul className=\"expenses-list\">\n\t\t\t{items.map((expense) => (\n\t\t\t\t<ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default ExpensesList;\n","import './ChartBar.css';\n\nconst ChartBar = ({ label, value, maxValue }) => {\n\tlet barFillHeight = '0%';\n\n\tif (maxValue > 0) barFillHeight = Math.round(value / maxValue * 100) + '%';\n\n\treturn (\n\t\t<div className=\"chart-bar\">\n\t\t\t<div className=\"chart-bar__inner\">\n\t\t\t\t<div className=\"chart-bar__fill\" style={{ height: barFillHeight }} />\n\t\t\t</div>\n\t\t\t<div className=\"chart-bar__label\">{label}</div>\n\t\t</div>\n\t);\n};\n\nexport default ChartBar;\n","import './Chart.css';\n\nimport ChartBar from './ChartBar';\n\nconst Chart = ({ dataPoints }) => {\n\tconst dataPointsValues = dataPoints.map((dataPoint) => dataPoint.value);\n\tconst totalMaximum = Math.max(...dataPointsValues);\n\n\treturn (\n\t\t<div className=\"chart\">\n\t\t\t{dataPoints.map((dataPoint) => (\n\t\t\t\t<ChartBar\n\t\t\t\t\tkey={dataPoint.label}\n\t\t\t\t\tvalue={dataPoint.value}\n\t\t\t\t\tmaxValue={totalMaximum}\n\t\t\t\t\tlabel={dataPoint.label}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Chart;\n","import Chart from '../Chart/Chart';\n\nconst ExpensesChart = ({ expenses }) => {\n\tconst chartDataPoints = [\n\t\t{ label: 'Jan', value: 0 },\n\t\t{ label: 'Feb', value: 0 },\n\t\t{ label: 'Mar', value: 0 },\n\t\t{ label: 'Apr', value: 0 },\n\t\t{ label: 'May', value: 0 },\n\t\t{ label: 'Jun', value: 0 },\n\t\t{ label: 'Jul', value: 0 },\n\t\t{ label: 'Aug', value: 0 },\n\t\t{ label: 'Sep', value: 0 },\n\t\t{ label: 'Oct', value: 0 },\n\t\t{ label: 'Nov', value: 0 },\n\t\t{ label: 'Dec', value: 0 }\n\t];\n\n\tfor (const expense of expenses) {\n\t\tconst expenseMonth = expense.date.getMonth();\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\n\t}\n\n\treturn <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from 'react';\n\nimport ExpensesFilter from './ExpensesFilter';\nimport Card from '../UI/Card';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\n\nimport './Expenses.css';\n\nconst Expenses = ({ items }) => {\n\tconst [ filteredYear, setFilteredYear ] = useState('2020');\n\n\tconst filterChangeHandler = (selectedYear) => {\n\t\tsetFilteredYear(selectedYear);\n\t};\n\n\tconst filteredExpenses = items.filter((expense) => {\n\t\treturn expense.date.getFullYear().toString() === filteredYear;\n\t});\n\n\treturn (\n\t\t<Card className=\"expenses\">\n\t\t\t<ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n\t\t\t<ExpensesChart expenses={filteredExpenses} />\n\t\t\t<ExpensesList items={filteredExpenses} />\n\t\t</Card>\n\t);\n};\n\nexport default Expenses;\n","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst INITIAL_EXPENSES = [\n\t{\n\t\tid: 'e1',\n\t\ttitle: 'Toilet Paper',\n\t\tamount: 94.12,\n\t\tdate: new Date(2020, 7, 14)\n\t},\n\t{ id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n\t{\n\t\tid: 'e3',\n\t\ttitle: 'Car Insurance',\n\t\tamount: 294.67,\n\t\tdate: new Date(2021, 2, 28)\n\t},\n\t{\n\t\tid: 'e4',\n\t\ttitle: 'New Desk (Wooden)',\n\t\tamount: 450,\n\t\tdate: new Date(2021, 5, 12)\n\t}\n];\n\nconst App = () => {\n\tconst [ expenses, setExpenses ] = useState(INITIAL_EXPENSES);\n\n\tconst addExpenseHandler = (expense) => {\n\t\tsetExpenses((prevExpenses) => [ expense, ...prevExpenses ]);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<NewExpense onAddExpense={addExpenseHandler} />\n\t\t\t<Expenses items={expenses} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}